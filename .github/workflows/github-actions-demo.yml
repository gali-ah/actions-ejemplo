name: Test y Deploy OOP Exercise

on:
  push:
    branches: [ master, main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para obtener historial de commits
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      
      - name: Obtener informaci√≥n del commit
        id: commit_info
        run: |
          AUTHOR_NAME="${{ github.event.head_commit.author.name }}"
          AUTHOR_EMAIL="${{ github.event.head_commit.author.email }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_COUNT=$(git rev-list --count HEAD)
          
          echo "author_name=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "author_email=$AUTHOR_EMAIL" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
          
          echo "üë§ Desarrollador: $AUTHOR_NAME"
          echo "üìß Email: $AUTHOR_EMAIL"
          echo "üí¨ Mensaje: $COMMIT_MESSAGE"
          echo "üïê Timestamp: $TIMESTAMP"
          echo "üìä Intento #$COMMIT_COUNT"
      
      - name: Ejecutar Tests de Python
        id: run_tests
        continue-on-error: true
        run: |
          set +e  # Desactivar exit-on-error temporalmente
          echo "üß™ Ejecutando tests..."
          python -m pytest tests/test_person.py -v --tb=short > test_output.txt 2>&1
          TEST_EXIT_CODE=$?
          set -e  # Reactivar exit-on-error
          
          # Extraer n√∫meros del resumen final de pytest
          # Busca l√≠neas como: "6 failed, 2 passed in 0.03s" o "8 passed in 0.03s"
          SUMMARY_LINE=$(grep -E "^=+ .* in [0-9]+\.[0-9]+s =+$" test_output.txt | tail -1)
          
          # Extraer tests pasados
          if echo "$SUMMARY_LINE" | grep -q "passed"; then
            PASSED=$(echo "$SUMMARY_LINE" | grep -oP '\d+(?= passed)' || echo "0")
          else
            PASSED="0"
          fi
          
          # Extraer tests fallidos
          if echo "$SUMMARY_LINE" | grep -q "failed"; then
            FAILED=$(echo "$SUMMARY_LINE" | grep -oP '\d+(?= failed)' || echo "0")
          else
            FAILED="0"
          fi
          
          TOTAL=$((PASSED + FAILED))
          
          echo "test_exit_code=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
          echo "tests_passed=$PASSED" >> $GITHUB_OUTPUT
          echo "tests_failed=$FAILED" >> $GITHUB_OUTPUT
          echo "tests_total=$TOTAL" >> $GITHUB_OUTPUT
          
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Todos los tests pasaron: $PASSED/$TOTAL"
          else
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "‚ùå Tests fallidos: $FAILED/$TOTAL"
          fi
          
          # NO hacemos exit aqu√≠, dejamos que continue-on-error maneje el flujo
      
      - name: Generar reporte de errores (si fall√≥)
        if: steps.run_tests.outputs.status == 'failed'
        run: |
          echo "üìù Generando reporte de errores..."
          
          cat > error_report.txt << 'EOF'
          ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
          ‚ùå REPORTE DE ERROR - Tests Fallidos
          ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
          
          Desarrollador: ${{ steps.commit_info.outputs.author_name }}
          Email: ${{ steps.commit_info.outputs.author_email }}
          Fecha/Hora: ${{ steps.commit_info.outputs.timestamp }}
          Intento #: ${{ steps.commit_info.outputs.commit_count }}
          Mensaje del commit: "${{ steps.commit_info.outputs.commit_message }}"
          
          ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          üìä RESUMEN DE TESTS
          ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          Total de tests: ${{ steps.run_tests.outputs.tests_total }}
          Tests pasados: ‚úÖ ${{ steps.run_tests.outputs.tests_passed }}
          Tests fallidos: ‚ùå ${{ steps.run_tests.outputs.tests_failed }}
          
          ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          üîç DETALLES DEL ERROR
          ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          
          EOF
          
          cat test_output.txt >> error_report.txt
          
          echo "" >> error_report.txt
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" >> error_report.txt
          echo "üí° SUGERENCIAS:" >> error_report.txt
          echo "1. Revisa que tu clase Person est√© en src/person.py" >> error_report.txt
          echo "2. Verifica que __str__ retorne el formato correcto" >> error_report.txt
          echo "3. Usa .title() para capitalizar nombres" >> error_report.txt
          echo "4. El formato debe ser: 'Nombre Apellido'" >> error_report.txt
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" >> error_report.txt
          
          cat error_report.txt
      
      - name: Actualizar index.html con resultado
        run: |
          STATUS="${{ steps.run_tests.outputs.status }}"
          AUTHOR="${{ steps.commit_info.outputs.author_name }}"
          EMAIL="${{ steps.commit_info.outputs.author_email }}"
          TIMESTAMP="${{ steps.commit_info.outputs.timestamp }}"
          COMMIT_MSG="${{ steps.commit_info.outputs.commit_message }}"
          COMMIT_NUM="${{ steps.commit_info.outputs.commit_count }}"
          PASSED="${{ steps.run_tests.outputs.tests_passed }}"
          TOTAL="${{ steps.run_tests.outputs.tests_total }}"
          
          # Escapar caracteres especiales para sed
          AUTHOR_ESC=$(echo "$AUTHOR" | sed 's/[&/\]/\\&/g')
          EMAIL_ESC=$(echo "$EMAIL" | sed 's/[&/\]/\\&/g')
          COMMIT_MSG_ESC=$(echo "$COMMIT_MSG" | sed 's/[&/\]/\\&/g')
          
          sed -i "s/{{STATUS}}/$STATUS/g" index.html
          sed -i "s/{{AUTHOR}}/$AUTHOR_ESC/g" index.html
          sed -i "s/{{EMAIL}}/$EMAIL_ESC/g" index.html
          sed -i "s/{{TIMESTAMP}}/$TIMESTAMP/g" index.html
          sed -i "s/{{COMMIT_MESSAGE}}/$COMMIT_MSG_ESC/g" index.html
          sed -i "s/{{COMMIT_COUNT}}/$COMMIT_NUM/g" index.html
          sed -i "s/{{TESTS_PASSED}}/$PASSED/g" index.html
          sed -i "s/{{TESTS_TOTAL}}/$TOTAL/g" index.html
          
          echo "‚úÖ index.html actualizado con los resultados"
      
      - name: Publicar a Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: actions-to-cloudflare
          directory: ./
      
      - name: Subir reporte de errores como artifact (si fall√≥)
        if: steps.run_tests.outputs.status == 'failed'
        uses: actions/upload-artifact@v4
        with:
          name: error-report-${{ github.run_number }}
          path: error_report.txt
          retention-days: 30
      
      - name: Mensaje final
        run: |
          if [ "${{ steps.run_tests.outputs.status }}" == "success" ]; then
            echo "üéâ ¬°√âXITO! Tests pasados y p√°gina desplegada"
            echo "üë§ Desarrollador: ${{ steps.commit_info.outputs.author_name }}"
            echo "‚úÖ Tests: ${{ steps.run_tests.outputs.tests_passed }}/${{ steps.run_tests.outputs.tests_total }}"
          else
            echo "‚ö†Ô∏è  Tests fallidos, pero p√°gina desplegada con reporte de error"
            echo "üìÑ Descarga el reporte completo desde Artifacts"
            echo "‚ùå Tests fallidos: ${{ steps.run_tests.outputs.tests_failed }}/${{ steps.run_tests.outputs.tests_total }}"
          fi